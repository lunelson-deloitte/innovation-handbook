[{"path":"index.html","id":"preface","chapter":"Preface","heading":"Preface","text":"understatement say plenty buzz surrounding \nAudit Analytics practice: adopting Databricks introduced compute resources\npreviously unattainable; recent class new hires display \nhighly technical skill set equally passionate “innovation-set”; Data\nScience neighbors’ work using large language models opens whole new realm\nrevolutionizing audit procedures.buzz comes lot great ideas, ideas - given adequate\nresources - truly reshape way group operates.keen reader noticed rather vague phrase “given adequate\nresources.” Unfortunately, field audit many self-imposed, yet\narguably reasonable, limitations restrict innovative ideas.Rather accept limitations self-impose end ideas,\n’d instead like advocate opposite.","code":""},{"path":"index.html","id":"innovation-handbook","chapter":"Preface","heading":"What is the The Innovation Handbook?","text":"Innovation Handbook \ninformal collection resources dedicated summarizing, discussing, \nadvancing innovation Audit Analytics. course book, hope \npresent generic template innovation project follow. common\nthemes book address include:structure innovation project?structure innovation project?innovation projects connect one another?innovation projects connect one another?define “successful” innovation project?define “successful” innovation project?book read cover--cover (likely) book read\nreference guide, something refer specific sections time \ntime. Given book discusses innovation, content may become outdated\nquicker resources; hence, frequent revisions may required.","code":""},{"path":"index.html","id":"what-is-the-scope-of-this-book","chapter":"Preface","heading":"What is The Scope of This Book?","text":"Let’s start book .book rubric follow. Part innovating \ndiscussing discovering boundaries define success .\nAlthough innovation projects (arguably ) relate one another\nways, actively establish boundaries.book rubric follow. Part innovating \ndiscussing discovering boundaries define success .\nAlthough innovation projects (arguably ) relate one another\nways, actively establish boundaries.book source truth. Although ’d like think ideas \npresent merit, result unique experiences. hope\nreading book, agree disagree say, \nlead productive discussions fundamentally view\ninnovation Audit Analytics.book source truth. Although ’d like think ideas \npresent merit, result unique experiences. hope\nreading book, agree disagree say, \nlead productive discussions fundamentally view\ninnovation Audit Analytics.book manifesto. political ideologies discussed.book manifesto. political ideologies discussed.Onto good stuff: book .book philosophical debate. One underlying tone ’ve observed \ninnovation put faded light, something feel comfortable\ndiscussing feel comfortable . endlessly advocate \noptions become common readily-available actions items group.book philosophical debate. One underlying tone ’ve observed \ninnovation put faded light, something feel comfortable\ndiscussing feel comfortable . endlessly advocate \noptions become common readily-available actions items group.book long-winded way saying “anyone can innovate.” Just like\nRatatouille’s Anyone Can Cook, everyone confidence \nsupport pursue innovative ideas.book long-winded way saying “anyone can innovate.” Just like\nRatatouille’s Anyone Can Cook, everyone confidence \nsupport pursue innovative ideas.book work--progress. always work--progress. \nshame book innovation innovative.book work--progress. always work--progress. \nshame book innovation innovative.","code":""},{"path":"index.html","id":"soapbox-my-personal-perspective","chapter":"Preface","heading":"Soapbox: My Personal Perspective","text":"end sections chapters, added “Soapbox” sections \ngive thoughts detail. Typically “thoughts” synonyms \n“opinions” - regardless underlying tone blocks text, \nsnippets completely optional (rest book isn’t).","code":""},{"path":"about-the-author.html","id":"about-the-author","chapter":"About the Author","heading":"About the Author","text":"progress…","code":""},{"path":"innovation-in-audit-analytics.html","id":"innovation-in-audit-analytics","chapter":"1 Innovation in Audit Analytics","heading":"1 Innovation in Audit Analytics","text":"","code":""},{"path":"innovation-in-audit-analytics.html","id":"a-brief-history","chapter":"1 Innovation in Audit Analytics","heading":"1.1 A Brief History","text":"last couple years looked like innovation Audit Analytics?discuss Rohan, rDWW, AutoMemo v0","code":""},{"path":"innovation-in-audit-analytics.html","id":"modern-day","chapter":"1 Innovation in Audit Analytics","heading":"1.2 Modern Day","text":"/“sources innovation”?argue “innovation-related” discussions; everyone great ideas, just need platform discuss freely/frequentlyargue “innovation-related” discussions; everyone great ideas, just need platform discuss freely/frequentlymost opportunities word mouth; dedicated/reliable source innovation projectsmost opportunities word mouth; dedicated/reliable source innovation projectsdiscuss + others, AutoMemo v1, etc.discuss + others, AutoMemo v1, etc.","code":""},{"path":"innovation-in-audit-analytics.html","id":"before-ai-takes-over","chapter":"1 Innovation in Audit Analytics","heading":"1.3 Before AI Takes Over","text":"much longer job AI overlords become sentient?title clickbait.discuss trends: data processing, user interfaces, standardizationdiscuss trends: data processing, user interfaces, standardizationupcoming projects: widely applicable projects (AutoMemo v2), new territory (clustering project), etc.upcoming projects: widely applicable projects (AutoMemo v2), new territory (clustering project), etc.","code":""},{"path":"the-roles-of-an-innovation-project.html","id":"the-roles-of-an-innovation-project","chapter":"2 The Roles of an Innovation Project","heading":"2 The Roles of an Innovation Project","text":"","code":""},{"path":"the-roles-of-an-innovation-project.html","id":"discovering-audit-innovation","chapter":"2 The Roles of an Innovation Project","heading":"2.1 Discovering Audit Innovation","text":"locate areas improvement: can processes faster? smarter? better?locate areas improvement: can processes faster? smarter? better?find inspiration others: ask “differently” “want work ”find inspiration others: ask “differently” “want work ”discuss auditors: ’re “customers”, gather feedback possiblediscuss auditors: ’re “customers”, gather feedback possible","code":""},{"path":"the-roles-of-an-innovation-project.html","id":"skepticism-skepticism-skepticism","chapter":"2 The Roles of an Innovation Project","heading":"2.2 Skepticism, Skepticism, Skepticism","text":"continuously define/narrow scope; /done, couldn’t/shouldn’t donecontinuously define/narrow scope; /done, couldn’t/shouldn’t donequestion idea worth investment; reason(s) work project?question idea worth investment; reason(s) work project?question capable implementing idea; resources “solve” problem(s)?question capable implementing idea; resources “solve” problem(s)?","code":""},{"path":"the-roles-of-an-innovation-project.html","id":"painting-a-masterpiece","chapter":"2 The Roles of an Innovation Project","heading":"2.3 Painting a Masterpiece","text":"draw outlines coloring; prematurely optimize, confirm plan taking actiondraw outlines coloring; prematurely optimize, confirm plan taking actionconsider end user; multiple rounds testing, frequent check-ins, always solve “need?”consider end user; multiple rounds testing, frequent check-ins, always solve “need?”stick workbench; implement fancy solutions, lazy programmer, make budget given youstick workbench; implement fancy solutions, lazy programmer, make budget given ","code":""},{"path":"contributing-to-innovation.html","id":"contributing-to-innovation","chapter":"3 Contributing to Innovation","heading":"3 Contributing to Innovation","text":"Innovation projects great opportunities flexing technical muscles.\nget learn existing business functions (meet people\nmight otherwise couldn’t), contribute developing really\ninteresting solutions shape future group.Fortunately, barrier innovation seems slowly lower time goes .\nLet’s look can overcome barrier start contributing innovation projects.","code":""},{"path":"contributing-to-innovation.html","id":"join-an-existing-project","chapter":"3 Contributing to Innovation","heading":"3.1 Join an Existing Project","text":"best way build “innovation resume” join existing project. lot cool projects going given time, try solve unique problem(s) developing unique solution(s).join projects?Keep date innovation resources. Read Things Know (TTK), stay touch people touch innovation projects, take lead conversations regarding state innovation.Keep date innovation resources. Read Things Know (TTK), stay touch people touch innovation projects, take lead conversations regarding state innovation.Make interests common knowledge. someone tells like “x, y, z”, well next time “x, y, z” comes conversation, ’ll think recommend appropriate. Networking always wins.Make interests common knowledge. someone tells like “x, y, z”, well next time “x, y, z” comes conversation, ’ll think recommend appropriate. Networking always wins.Get lucky. Sometimes innovation project falls lap. Better make opportunity!Get lucky. Sometimes innovation project falls lap. Better make opportunity!","code":""},{"path":"contributing-to-innovation.html","id":"start-your-own-project","chapter":"3 Contributing to Innovation","heading":"3.2 Start Your Own Project","text":"Disclaimer: rely approach. Discuss ideas others first. decide prototype idea discussing others, limit amount work bare minimum.Rather waiting project spawn matches interests problem statement can relate , another valid option building “innovation resume” creating project. Sometimes creating project simple discussing idea couple others securing support work project. times, ’s long, tedious process requires vouch project.Additionally, innovation projects internally funded, finite resources, can’t support innovation projects even ideas worth exploring point time.Regardless caveats (ignore), creating project rewarding endeavor. initial stages project challenging, generating experiences managing, developing, presenting product invaluable skill benefit anywhere go. Although don’t consider expert, ’ve started couple innovation projects, turned highly beneficial regardless current state.go route, consider reading Roles Innovation Project assuming responsibilities - least initially - project.","code":""},{"path":"technology-stack.html","id":"technology-stack","chapter":"4 Technology Stack","heading":"4 Technology Stack","text":"solid developer environment like comfy workspace coder. ’s just cool-looking code editor virtual environment keep things tidy — ’s creating space creativity efficiency can thrive. IDE (Integrated Development Environment) like personalized command center, features help write, debug, navigate code ease. Virtual environments (venv) like mini coding sanctuaries, keeping projects isolated preventing compatibility chaos. tools aren’t just fancy accessories; ’re backbone productive coding. Imagine trying build masterpiece without clean canvas good brushes — ’s possible, make harder ? well-organized tailored developer environment secret sauce turns lines code functional elegant software.","code":""},{"path":"technology-stack.html","id":"the-developer-environment","chapter":"4 Technology Stack","heading":"4.1 The Developer Environment","text":"getting specific technologies, want stress importance setting developer environment works . time spend setting toolbench suits needs, less time spend navigating toolkit future, allowing efficient, organized, cognizant software developing best practices.","code":""},{"path":"technology-stack.html","id":"integrated-development-environment-ide","chapter":"4 Technology Stack","heading":"Integrated Development Environment (IDE)","text":"Visual Studio CodeIDE another term fancy text editor. type everything text file, develop enhanced text editor validate ’re typing “correct” (defined IDE) make things look pretty syntax highlighting. IDEs good linting code, making sure thing shouldn’t brought attention . lint code (linters like Ruff get pretty techy ), ’re looking good place start, get IDE like Visual Studio Code, add couple extensions, get coding.","code":""},{"path":"technology-stack.html","id":"virtual-environments-venv","chapter":"4 Technology Stack","heading":"Virtual Environments (venv)","text":"Python’s base venv libraryPython’s base venv libraryR’s renv packageR’s renv packageVirtual environments coding-equivalent flossing teeth; know sometimes “forget” say ’ll next time. Admittedly, , maybe ’s fair take role virtual-environment-dentist criticize .Virtual environments great outlets organizing development environments. allow isolate specific sets packages (even specific versions packages) one another, allowing operate specific environment freely. also protects code unintentional updates packages require, letting live “good old days” long don’t delete virtual environment.","code":""},{"path":"technology-stack.html","id":"packages-modules","chapter":"4 Technology Stack","heading":"Packages & Modules","text":"Py-Pkgs book great resource getting speedThe Py-Pkgs book great resource getting speedThe R Packages book deep dive packaging R (also Hadley Wickham great)R Packages book deep dive packaging R (also Hadley Wickham great)next stop coding-equivalent train recycling code. Rather building things scratch every time, developing packages modules, even just use, allow skip “square one” every time get swing things.can involve setting configuration files rely , importing commonly used constants functions, even just documenting thoughts centralized repository. also opens door sharing work others, promoting collaboration requiring continuously maintain integrity package/module.","code":""},{"path":"technology-stack.html","id":"version-control","chapter":"4 Technology Stack","heading":"Version Control","text":"GitGitGitHubGitHubComfort Git GitHub non-negotiable requirement Git, distributed version control system, ensures seamless collaboration tracks changes precision. GitHub, platform choice hosting repositories, provides centralized hub teamwork. Proficiency tools paramount version control, branching strategies, collaborative coding. essence, developer well-versed Git GitHub equipped contribute effectively projects, maintain code integrity, navigate collaborative nature modern software development","code":""},{"path":"technology-stack.html","id":"command-line","chapter":"4 Technology Stack","heading":"Command Line","text":"Linux - ’s unfair say “comfortable ”, comfortable withProficiency command line cornerstone skill. serves fundamental tool tasks ranging file navigation script execution debugging. adept command line enhances efficiency also empowers developers streamline workflows troubleshoot precision. essence, ’s practical indispensable asset developer looking navigate complexities coding ease precision.","code":""},{"path":"technology-stack.html","id":"specific-technologies","chapter":"4 Technology Stack","heading":"4.2 Specific Technologies","text":"Story time. first week college, spent lot time looking courses school offer. hadn’t taken programming class time, didn’t stop browsing Computer Science department’s catalog, bookmarking every class mentioned programming language never heard . took Post-note, wrote , stuck desk remind needed learn languages.Just checked, wrote 17 different languages.Fast forward current day, comfortable using two languages actively avoid trying add third unless absolutely necessary. quickly learned ’s benefit knowing surface-level details across many languages; real power reaching depths fewer languages, time reach “bottom” realize ’re nowhere near .reading section, consider last sentence. recursive feeling “never reaching bottom” makes feel uncomfortable, really try push past feeling. means professional athlete, one thing ’ll hear athlete say comfortable uncomfortable, perform best odds stacked . Computer science intimidating field allow intimidate . Embrace feelings, learn experiences, ’ll reach deeper deeper depths.","code":""},{"path":"technology-stack.html","id":"python","chapter":"4 Technology Stack","heading":"Python","text":"really surprise Python ? going try best avoid saying anything already know. Instead, ’ll just list things ’m really excited look :Rust IntegrationPython low-level language suffers “slow” run-time performance. Old news. Although packages like CPython Numba tried introduce low-level features “make Python faster”, new, cool, hip thing nowadays run Rust Python. ’m going try summarize know little , know data-intensive packages moving Rust (aren’t already deep Apache Arrow hole), ’s worth keeping eye packages come .Static TypingI initially adverse type hinting first read . specify type objects functions know x always float? Looking back, ’s terrible thought .Basic type hinting must now (least many others ) - helps keep track intended behavior scripts, also signals others interact application. Additionally, third party packages can “compile” code command line make sure objects used “properly”.people go deep-end type hinting - ’m just say Python, dynamic language, greatly benefits type hints. Although never mandatory feature language, ’s good practice mandate work.Data ValidationThis isn’t new news, ’s valid tangent Static Typing. Since static typing optional feature, ’s technically nothing wrong writing x: int assigning x = 'string'. ’s data validation packages come . Rather “documenting” behavior, can assign behavior, including validation functions run make sure object nothing else.Python supports dataclasses natively, pydantic great alternative (especially web development). personally use attrs documentation includes great summary three options. Point : type hinting data validation strongly recommended security measures can really elevate code (especially others using , including future self!).","code":""},{"path":"technology-stack.html","id":"r","chapter":"4 Technology Stack","heading":"R","text":"received plenty [sic] endless attempts defend R. care Google Trends non-statisticians say. R beautiful language embraces much statistical software. Even working Python, ’ll leave comments angrily showing frustration features readily accessible Python.Well, since ’re curious, features functional programming, native element-wise support, tidy evaluation, genius pipe operator, … [following emitted since broke character limit]R also benefits excellent development team (Hadley Wickham great), eager user base, cohesive package development. Unlike Python, R serves specific crowd statisticians data scientists. Since ’s “less” focus , allows rapid development highly specialized tools - including tidyverse - make performing specialized tasks R favorable.’re looking heighten R skills even just develop appreciation severely unappreciated programming language (said ’m biased yet), consider reading resources:TidyverseThe TidyversepurrrpurrrAdvanced RAdvanced RThe Style GuideThe Style Guide","code":""},{"path":"technology-stack.html","id":"sql","chapter":"4 Technology Stack","heading":"SQL","text":"argument hear learning SQL “’s old language” “’s built-functions ’m already using” “’s pronounced S-Q-L, sequel!!”argument present learning SQL “’s stood test time” “’s foundation work ” “’s pronounced ways!!”Pure data engineers won’t agree , might help think SQL skill language. try stop learning intricacies language (googling ‘advanced SQL’ brings scary links), unlike two languages, one can treated add-tools actual tool .","code":""},{"path":"technology-stack.html","id":"shiny","chapter":"4 Technology Stack","heading":"Shiny","text":"LinksShiny RShiny RShiny PythonShiny PythonJoe Cheng | Past Future Shiny | RStudio (2022); highly recommend talk Joe single greatest resource anything ShinyJoe Cheng | Past Future Shiny | RStudio (2022); highly recommend talk Joe single greatest resource anything ShinyMastering Shiny; highly recommend reading even need reference one chapterMastering Shiny; highly recommend reading even need reference one chapterIf someone approaches street asks “tell something Lucas Nelson”, words coming mouth “Lucas loves Shiny.” (plan making final words.)Shiny? Shiny best way build fast, beautiful web applications remains extensible enough power large, mission-critical applications. brands framework allows quickly easily prototype applications, recent developments allow much something spin localhost. Stylistically, Shiny allows creating visually stunning applications. Computationally, reactive components allow simple cohesion elements. Relatively, clear winner amid alternatives like Dash Streamlit (check even convinced Shiny best).Shiny apps easy make, integrations tools like Cookiecutter handle packaging webhosting service deploy can make prototyping much better experience everyone involved.","code":""},{"path":"areas-of-opportunity.html","id":"areas-of-opportunity","chapter":"5 Areas of Opportunity","heading":"5 Areas of Opportunity","text":"restrictions surrounding innovation, makes working “really cool” projects even tougher come .following areas believe Wild Wests innovation - , , explored areas significant, unbound potential project addressing fields.","code":""},{"path":"areas-of-opportunity.html","id":"statistics","chapter":"5 Areas of Opportunity","heading":"5.1 Statistics","text":"believe /focus developing analytics mathematical focus.introduce () mathematical rigor audit proceduresintroduce () mathematical rigor audit proceduresplenty applications (probabilistic fraud detection, unsupervised learning, etc.)plenty applications (probabilistic fraud detection, unsupervised learning, etc.)foundation machine learning, artificial intelligencefoundation machine learning, artificial intelligence","code":""},{"path":"areas-of-opportunity.html","id":"data-engineering","chapter":"5 Areas of Opportunity","heading":"5.2 Data Engineering","text":"believe /develop robust ELT/ETL pipelines.introduce proper data processing methods (file /o, sql scripts, attach data behavior)introduce proper data processing methods (file /o, sql scripts, attach data behavior)introduce proper error handling methods (logging, testing, principle least astonishment)introduce proper error handling methods (logging, testing, principle least astonishment)introduce proper software development methods (packages/modules, databases, version control)introduce proper software development methods (packages/modules, databases, version control)","code":""},{"path":"areas-of-opportunity.html","id":"software-development","chapter":"5 Areas of Opportunity","heading":"5.3 Software Development","text":"believe /reduce user involvement minimal inputs.specifically, app development; can reduce user involvement necessary inputs?specifically, app development; can reduce user involvement necessary inputs?database architecture; efficiently store/process/export data type?database architecture; efficiently store/process/export data type?","code":""},{"path":"appendix.html","id":"appendix","chapter":"Appendix","heading":"Appendix","text":"sections complement sections throughout book, elaborating\nprevious points offering thoughts extend scope \nbook. material optional, highly specific, (goes without saying)\nopinionated.","code":""},{"path":"appendix.html","id":"the-role-of-the-software-developer","chapter":"Appendix","heading":"The Role of the Software Developer","text":"Soapbox: opinionated section book. \nstrong feelings software developer contribute \ninnovation project, even stronger opinions opposite.Soapbox: Nowhere LinkedIn page find title “Software\nDeveloper”, degree computer science, certificates tech companies.\nknow know, ’m happy admit ’s lot \nknow.software developer uses machines translate intangible ideas \ntangible applications.","code":""},{"path":"appendix.html","id":"my-software-developing-philosophies","chapter":"Appendix","heading":"My Software-Developing Philosophies","text":"really exhausting keeping technology trends. One day ’re\nhearing JobReplacer3000 just learn JobReplacer4000 \nnext day. Soon JobReplacerX large number count.\n(Now know can least count 4000.)even exhausting convincing need keep \ntrends. ’s greater sense doom scrolling LinkedIn\nreading posts new products people suddenly became experts\novernight.Posts like make want uninstall LinkedIn - remind\nsoftware development just flashy job title. \ncore, software development problem solving, better \nsolving problems, better developing software.key recognizing couple crucial details:problem aggregation many smaller problemseach problem aggregation many smaller problemseach problem requires specific solutioneach problem requires specific solutioneach problem exists reasoneach problem exists reasonIf aren’t getting bullet points tattooed right now \nnever software developer. Just kidding.approaching problem, break chunks. Figure \nneed address (bonus points) can write solutions address\nmultiple problems effectively. Writing solutions requires specific\ntools, knowing one(s) use effectively solve problem(s)\ninvaluable skill. invaluable, however, knowing focus\nefforts focus efforts. scope alone \nenough tackle problem face.might studied statistics mathematician. deeply fear\nmathematical proofs believe great application \ndetails. Scroll page book\njust skim proof.see?proofs contain much text symbols numbers. reason\neverything focus (math gods, forgive )\nnumerical gibberish. tell story. setup problem breaking\nstep step. say ’ll use address problem. \nexplain ’ve selected proves result.Software development . ’s jumping latest\ntrends writing cursed, incomprehensible nested loops can sort\narrays \\(O(nlog(n))\\) time complexity. ’s telling story, \nspend time deliberately crafting meaningful stories, \nbecome irreplaceable software developer.Rather hearing say, highly recommend reading \nresources. course, ’s ’s listed , ’s\ndiscover.Pragmatic ProgrammerAnother Lazy Programmer stanceDefensive programmingPrinciple Least Astonishment","code":""}]
